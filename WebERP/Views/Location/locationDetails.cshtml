@model WebERP.Models.LocationViewModel

@{
    ViewData["Title"] = "Location Master";
}

<nav class="navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow" style="background: linear-gradient(135deg, #ff00b1 0%, #3b009a 100%);">
    <h3 style="color:white">Location Master Tabs</h3>
</nav>
<ul class="nav nav-pills" style="background: linear-gradient(135deg, rgb(255 141 0 / 90%) 0%, #74009a 100%); width:290px;">
    <li role="presentation" class="nav-item @(Model.ActiveTab == WebERP.Models.Tab.Country ? "active": string.Empty)" >
        <a class="nav-link text-white" asp-route-tabname="Country" asp-action="SwitchToTabs">Country</a>
    </li>
    <li role="presentation" class="nav-item @(Model.ActiveTab == WebERP.Models.Tab.State ? "active": string.Empty)" style="margin-left:10px;">
        <a class="nav-link text-white" asp-route-tabname="State" asp-action="SwitchToTabs">State</a>
    </li>
    <li role="presentation" class="nav-item @(Model.ActiveTab == WebERP.Models.Tab.City ? "active": string.Empty)" style="margin-left:10px;">
        <a class="nav-link text-white" asp-route-tabname="City" asp-action="SwitchToTabs">City</a>
    </li>
</ul>

@switch (Model.ActiveTab)
{
    case WebERP.Models.Tab.Country:
        @await Component.InvokeAsync("Country");
        break;

    case WebERP.Models.Tab.State:
        @await Component.InvokeAsync("State");
        break;

    case WebERP.Models.Tab.City:
        @await Component.InvokeAsync("City");
        break;
    default:
        break;
}



